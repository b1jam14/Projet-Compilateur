Terminals unused in grammar

    tERROR


Grammar

    0 $accept: Programme $end

    1 Programme: TypeFonction tMAIN Fonction
    2          | TypeFonction tID Fonction Programme

    3 TypeFonction: tINT
    4             | tVOID

    5 $@1: ε

    6 Fonction: $@1 tLPAR Variables tRPAR tLBRACE Bloc tRBRACE

    7 Variables: ε
    8          | tVOID
    9          | Variable VariablesNext

   10 VariablesNext: ε
   11              | tCOMMA Variable VariablesNext

   12 Variable: tINT tID

   13 Bloc: ε
   14     | Declaration Bloc
   15     | Affectation Bloc
   16     | If Bloc
   17     | While Bloc
   18     | Print Bloc
   19     | Return
   20     | tID tLPAR Argument tRPAR tSEMI Bloc

   21 Affectation: tID tASSIGN Expression tSEMI

   22 Declaration: tINT VariableDeclaration tSEMI
   23            | tINT VariableDeclaration tASSIGN Expression tSEMI

   24 VariableDeclaration: tID

   25 $@2: ε

   26 VariableDeclaration: tID tCOMMA $@2 VariableDeclaration

   27 $@3: ε

   28 $@4: ε

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 Bloc $@4 tRBRACE Else

   30 Else: ε

   31 $@5: ε

   32 $@6: ε

   33 Else: tELSE tLBRACE $@5 Bloc $@6 tRBRACE

   34 $@7: ε

   35 $@8: ε

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE $@7 Bloc $@8 tRBRACE

   37 Print: tPRINT tLPAR tID tRPAR tSEMI

   38 Return: tRETURN tID tSEMI

   39 Expression: tID
   40           | tNB
   41           | tID tLPAR Argument tRPAR
   42           | Expression tADD Expression
   43           | Expression tSUB Expression
   44           | Expression tMUL Expression
   45           | Expression tDIV Expression
   46           | tLPAR Expression tRPAR

   47 Argument: ε
   48         | IDNB ArgumentNext

   49 ArgumentNext: ε
   50             | tCOMMA Expression ArgumentNext

   51 Condition: IDNB tEQ IDNB ConditionSuite
   52          | IDNB tNE IDNB ConditionSuite
   53          | IDNB tLT IDNB ConditionSuite
   54          | IDNB tGT IDNB ConditionSuite
   55          | IDNB tLE IDNB ConditionSuite
   56          | IDNB tGE IDNB ConditionSuite
   57          | IDNB tAND IDNB ConditionSuite
   58          | IDNB tOR IDNB ConditionSuite
   59          | tNOT tID ConditionSuite
   60          | tNOT tLPAR Condition tRPAR ConditionSuite
   61          | IDNB

   62 IDNB: tID
   63     | tNB

   64 ConditionSuite: ε
   65               | tAND Condition
   66               | tOR Condition


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    tMAIN (258) 1
    tINT (259) 3 12 22 23
    tLPAR (260) 6 20 29 36 37 41 46 60
    tVOID (261) 4 8
    tRPAR (262) 6 20 29 36 37 41 46 60
    tERROR (263)
    tLBRACE (264) 6 29 33 36
    tRBRACE (265) 6 29 33 36
    tIF (266) 29
    tELSE (267) 33
    tWHILE (268) 36
    tPRINT (269) 37
    tRETURN (270) 38
    tADD (271) 42
    tSUB (272) 43
    tMUL (273) 44
    tDIV (274) 45
    tLT (275) 53
    tGT (276) 54
    tNE (277) 52
    tEQ (278) 51
    tLE (279) 55
    tGE (280) 56
    tASSIGN (281) 21 23
    tAND (282) 57 65
    tOR (283) 58 66
    tNOT (284) 59 60
    tSEMI (285) 20 21 22 23 37 38
    tCOMMA (286) 11 26 50
    tNB <nb> (287) 40 63
    tID <str> (288) 2 12 20 21 24 26 37 38 39 41 59 62


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    Programme (35)
        on left: 1 2
        on right: 0 2
    TypeFonction (36)
        on left: 3 4
        on right: 1 2
    Fonction (37)
        on left: 6
        on right: 1 2
    $@1 (38)
        on left: 5
        on right: 6
    Variables (39)
        on left: 7 8 9
        on right: 6
    VariablesNext (40)
        on left: 10 11
        on right: 9 11
    Variable (41)
        on left: 12
        on right: 9 11
    Bloc (42)
        on left: 13 14 15 16 17 18 19 20
        on right: 6 14 15 16 17 18 20 29 33 36
    Affectation (43)
        on left: 21
        on right: 15
    Declaration (44)
        on left: 22 23
        on right: 14
    VariableDeclaration (45)
        on left: 24 26
        on right: 22 23 26
    $@2 (46)
        on left: 25
        on right: 26
    If (47)
        on left: 29
        on right: 16
    $@3 (48)
        on left: 27
        on right: 29
    $@4 (49)
        on left: 28
        on right: 29
    Else (50)
        on left: 30 33
        on right: 29
    $@5 (51)
        on left: 31
        on right: 33
    $@6 (52)
        on left: 32
        on right: 33
    While (53)
        on left: 36
        on right: 17
    $@7 (54)
        on left: 34
        on right: 36
    $@8 (55)
        on left: 35
        on right: 36
    Print (56)
        on left: 37
        on right: 18
    Return (57)
        on left: 38
        on right: 19
    Expression (58)
        on left: 39 40 41 42 43 44 45 46
        on right: 21 23 42 43 44 45 46 50
    Argument (59)
        on left: 47 48
        on right: 20 41
    ArgumentNext (60)
        on left: 49 50
        on right: 48 50
    Condition (61)
        on left: 51 52 53 54 55 56 57 58 59 60 61
        on right: 29 36 60 65 66
    IDNB (62)
        on left: 62 63
        on right: 48 51 52 53 54 55 56 57 58 61
    ConditionSuite (63)
        on left: 64 65 66
        on right: 51 52 53 54 55 56 57 58 59 60


State 0

    0 $accept: • Programme $end

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    Programme     go to state 3
    TypeFonction  go to state 4


State 1

    3 TypeFonction: tINT •

    $default  reduce using rule 3 (TypeFonction)


State 2

    4 TypeFonction: tVOID •

    $default  reduce using rule 4 (TypeFonction)


State 3

    0 $accept: Programme • $end

    $end  shift, and go to state 5


State 4

    1 Programme: TypeFonction • tMAIN Fonction
    2          | TypeFonction • tID Fonction Programme

    tMAIN  shift, and go to state 6
    tID    shift, and go to state 7


State 5

    0 $accept: Programme $end •

    $default  accept


State 6

    1 Programme: TypeFonction tMAIN • Fonction

    $default  reduce using rule 5 ($@1)

    Fonction  go to state 8
    $@1       go to state 9


State 7

    2 Programme: TypeFonction tID • Fonction Programme

    $default  reduce using rule 5 ($@1)

    Fonction  go to state 10
    $@1       go to state 9


State 8

    1 Programme: TypeFonction tMAIN Fonction •

    $default  reduce using rule 1 (Programme)


State 9

    6 Fonction: $@1 • tLPAR Variables tRPAR tLBRACE Bloc tRBRACE

    tLPAR  shift, and go to state 11


State 10

    2 Programme: TypeFonction tID Fonction • Programme

    tINT   shift, and go to state 1
    tVOID  shift, and go to state 2

    Programme     go to state 12
    TypeFonction  go to state 4


State 11

    6 Fonction: $@1 tLPAR • Variables tRPAR tLBRACE Bloc tRBRACE

    tINT   shift, and go to state 13
    tVOID  shift, and go to state 14

    $default  reduce using rule 7 (Variables)

    Variables  go to state 15
    Variable   go to state 16


State 12

    2 Programme: TypeFonction tID Fonction Programme •

    $default  reduce using rule 2 (Programme)


State 13

   12 Variable: tINT • tID

    tID  shift, and go to state 17


State 14

    8 Variables: tVOID •

    $default  reduce using rule 8 (Variables)


State 15

    6 Fonction: $@1 tLPAR Variables • tRPAR tLBRACE Bloc tRBRACE

    tRPAR  shift, and go to state 18


State 16

    9 Variables: Variable • VariablesNext

    tCOMMA  shift, and go to state 19

    $default  reduce using rule 10 (VariablesNext)

    VariablesNext  go to state 20


State 17

   12 Variable: tINT tID •

    $default  reduce using rule 12 (Variable)


State 18

    6 Fonction: $@1 tLPAR Variables tRPAR • tLBRACE Bloc tRBRACE

    tLBRACE  shift, and go to state 21


State 19

   11 VariablesNext: tCOMMA • Variable VariablesNext

    tINT  shift, and go to state 13

    Variable  go to state 22


State 20

    9 Variables: Variable VariablesNext •

    $default  reduce using rule 9 (Variables)


State 21

    6 Fonction: $@1 tLPAR Variables tRPAR tLBRACE • Bloc tRBRACE

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 29
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 22

   11 VariablesNext: tCOMMA Variable • VariablesNext

    tCOMMA  shift, and go to state 19

    $default  reduce using rule 10 (VariablesNext)

    VariablesNext  go to state 36


State 23

   22 Declaration: tINT • VariableDeclaration tSEMI
   23            | tINT • VariableDeclaration tASSIGN Expression tSEMI

    tID  shift, and go to state 37

    VariableDeclaration  go to state 38


State 24

   29 If: tIF • tLPAR Condition tRPAR tLBRACE $@3 Bloc $@4 tRBRACE Else

    tLPAR  shift, and go to state 39


State 25

   36 While: tWHILE • tLPAR Condition tRPAR tLBRACE $@7 Bloc $@8 tRBRACE

    tLPAR  shift, and go to state 40


State 26

   37 Print: tPRINT • tLPAR tID tRPAR tSEMI

    tLPAR  shift, and go to state 41


State 27

   38 Return: tRETURN • tID tSEMI

    tID  shift, and go to state 42


State 28

   20 Bloc: tID • tLPAR Argument tRPAR tSEMI Bloc
   21 Affectation: tID • tASSIGN Expression tSEMI

    tLPAR    shift, and go to state 43
    tASSIGN  shift, and go to state 44


State 29

    6 Fonction: $@1 tLPAR Variables tRPAR tLBRACE Bloc • tRBRACE

    tRBRACE  shift, and go to state 45


State 30

   15 Bloc: Affectation • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 46
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 31

   14 Bloc: Declaration • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 47
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 32

   16 Bloc: If • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 48
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 33

   17 Bloc: While • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 49
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 34

   18 Bloc: Print • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 50
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 35

   19 Bloc: Return •

    $default  reduce using rule 19 (Bloc)


State 36

   11 VariablesNext: tCOMMA Variable VariablesNext •

    $default  reduce using rule 11 (VariablesNext)


State 37

   24 VariableDeclaration: tID •
   26                    | tID • tCOMMA $@2 VariableDeclaration

    tCOMMA  shift, and go to state 51

    $default  reduce using rule 24 (VariableDeclaration)


State 38

   22 Declaration: tINT VariableDeclaration • tSEMI
   23            | tINT VariableDeclaration • tASSIGN Expression tSEMI

    tASSIGN  shift, and go to state 52
    tSEMI    shift, and go to state 53


State 39

   29 If: tIF tLPAR • Condition tRPAR tLBRACE $@3 Bloc $@4 tRBRACE Else

    tNOT  shift, and go to state 54
    tNB   shift, and go to state 55
    tID   shift, and go to state 56

    Condition  go to state 57
    IDNB       go to state 58


State 40

   36 While: tWHILE tLPAR • Condition tRPAR tLBRACE $@7 Bloc $@8 tRBRACE

    tNOT  shift, and go to state 54
    tNB   shift, and go to state 55
    tID   shift, and go to state 56

    Condition  go to state 59
    IDNB       go to state 58


State 41

   37 Print: tPRINT tLPAR • tID tRPAR tSEMI

    tID  shift, and go to state 60


State 42

   38 Return: tRETURN tID • tSEMI

    tSEMI  shift, and go to state 61


State 43

   20 Bloc: tID tLPAR • Argument tRPAR tSEMI Bloc

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    $default  reduce using rule 47 (Argument)

    Argument  go to state 62
    IDNB      go to state 63


State 44

   21 Affectation: tID tASSIGN • Expression tSEMI

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 67


State 45

    6 Fonction: $@1 tLPAR Variables tRPAR tLBRACE Bloc tRBRACE •

    $default  reduce using rule 6 (Fonction)


State 46

   15 Bloc: Affectation Bloc •

    $default  reduce using rule 15 (Bloc)


State 47

   14 Bloc: Declaration Bloc •

    $default  reduce using rule 14 (Bloc)


State 48

   16 Bloc: If Bloc •

    $default  reduce using rule 16 (Bloc)


State 49

   17 Bloc: While Bloc •

    $default  reduce using rule 17 (Bloc)


State 50

   18 Bloc: Print Bloc •

    $default  reduce using rule 18 (Bloc)


State 51

   26 VariableDeclaration: tID tCOMMA • $@2 VariableDeclaration

    $default  reduce using rule 25 ($@2)

    $@2  go to state 68


State 52

   23 Declaration: tINT VariableDeclaration tASSIGN • Expression tSEMI

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 69


State 53

   22 Declaration: tINT VariableDeclaration tSEMI •

    $default  reduce using rule 22 (Declaration)


State 54

   59 Condition: tNOT • tID ConditionSuite
   60          | tNOT • tLPAR Condition tRPAR ConditionSuite

    tLPAR  shift, and go to state 70
    tID    shift, and go to state 71


State 55

   63 IDNB: tNB •

    $default  reduce using rule 63 (IDNB)


State 56

   62 IDNB: tID •

    $default  reduce using rule 62 (IDNB)


State 57

   29 If: tIF tLPAR Condition • tRPAR tLBRACE $@3 Bloc $@4 tRBRACE Else

    tRPAR  shift, and go to state 72


State 58

   51 Condition: IDNB • tEQ IDNB ConditionSuite
   52          | IDNB • tNE IDNB ConditionSuite
   53          | IDNB • tLT IDNB ConditionSuite
   54          | IDNB • tGT IDNB ConditionSuite
   55          | IDNB • tLE IDNB ConditionSuite
   56          | IDNB • tGE IDNB ConditionSuite
   57          | IDNB • tAND IDNB ConditionSuite
   58          | IDNB • tOR IDNB ConditionSuite
   61          | IDNB •

    tLT   shift, and go to state 73
    tGT   shift, and go to state 74
    tNE   shift, and go to state 75
    tEQ   shift, and go to state 76
    tLE   shift, and go to state 77
    tGE   shift, and go to state 78
    tAND  shift, and go to state 79
    tOR   shift, and go to state 80

    $default  reduce using rule 61 (Condition)


State 59

   36 While: tWHILE tLPAR Condition • tRPAR tLBRACE $@7 Bloc $@8 tRBRACE

    tRPAR  shift, and go to state 81


State 60

   37 Print: tPRINT tLPAR tID • tRPAR tSEMI

    tRPAR  shift, and go to state 82


State 61

   38 Return: tRETURN tID tSEMI •

    $default  reduce using rule 38 (Return)


State 62

   20 Bloc: tID tLPAR Argument • tRPAR tSEMI Bloc

    tRPAR  shift, and go to state 83


State 63

   48 Argument: IDNB • ArgumentNext

    tCOMMA  shift, and go to state 84

    $default  reduce using rule 49 (ArgumentNext)

    ArgumentNext  go to state 85


State 64

   46 Expression: tLPAR • Expression tRPAR

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 86


State 65

   40 Expression: tNB •

    $default  reduce using rule 40 (Expression)


State 66

   39 Expression: tID •
   41           | tID • tLPAR Argument tRPAR

    tLPAR  shift, and go to state 87

    $default  reduce using rule 39 (Expression)


State 67

   21 Affectation: tID tASSIGN Expression • tSEMI
   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression

    tADD   shift, and go to state 88
    tSUB   shift, and go to state 89
    tMUL   shift, and go to state 90
    tDIV   shift, and go to state 91
    tSEMI  shift, and go to state 92


State 68

   26 VariableDeclaration: tID tCOMMA $@2 • VariableDeclaration

    tID  shift, and go to state 37

    VariableDeclaration  go to state 93


State 69

   23 Declaration: tINT VariableDeclaration tASSIGN Expression • tSEMI
   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression

    tADD   shift, and go to state 88
    tSUB   shift, and go to state 89
    tMUL   shift, and go to state 90
    tDIV   shift, and go to state 91
    tSEMI  shift, and go to state 94


State 70

   60 Condition: tNOT tLPAR • Condition tRPAR ConditionSuite

    tNOT  shift, and go to state 54
    tNB   shift, and go to state 55
    tID   shift, and go to state 56

    Condition  go to state 95
    IDNB       go to state 58


State 71

   59 Condition: tNOT tID • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 98


State 72

   29 If: tIF tLPAR Condition tRPAR • tLBRACE $@3 Bloc $@4 tRBRACE Else

    tLBRACE  shift, and go to state 99


State 73

   53 Condition: IDNB tLT • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 100


State 74

   54 Condition: IDNB tGT • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 101


State 75

   52 Condition: IDNB tNE • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 102


State 76

   51 Condition: IDNB tEQ • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 103


State 77

   55 Condition: IDNB tLE • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 104


State 78

   56 Condition: IDNB tGE • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 105


State 79

   57 Condition: IDNB tAND • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 106


State 80

   58 Condition: IDNB tOR • IDNB ConditionSuite

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    IDNB  go to state 107


State 81

   36 While: tWHILE tLPAR Condition tRPAR • tLBRACE $@7 Bloc $@8 tRBRACE

    tLBRACE  shift, and go to state 108


State 82

   37 Print: tPRINT tLPAR tID tRPAR • tSEMI

    tSEMI  shift, and go to state 109


State 83

   20 Bloc: tID tLPAR Argument tRPAR • tSEMI Bloc

    tSEMI  shift, and go to state 110


State 84

   50 ArgumentNext: tCOMMA • Expression ArgumentNext

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 111


State 85

   48 Argument: IDNB ArgumentNext •

    $default  reduce using rule 48 (Argument)


State 86

   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression
   46           | tLPAR Expression • tRPAR

    tRPAR  shift, and go to state 112
    tADD   shift, and go to state 88
    tSUB   shift, and go to state 89
    tMUL   shift, and go to state 90
    tDIV   shift, and go to state 91


State 87

   41 Expression: tID tLPAR • Argument tRPAR

    tNB  shift, and go to state 55
    tID  shift, and go to state 56

    $default  reduce using rule 47 (Argument)

    Argument  go to state 113
    IDNB      go to state 63


State 88

   42 Expression: Expression tADD • Expression

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 114


State 89

   43 Expression: Expression tSUB • Expression

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 115


State 90

   44 Expression: Expression tMUL • Expression

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 116


State 91

   45 Expression: Expression tDIV • Expression

    tLPAR  shift, and go to state 64
    tNB    shift, and go to state 65
    tID    shift, and go to state 66

    Expression  go to state 117


State 92

   21 Affectation: tID tASSIGN Expression tSEMI •

    $default  reduce using rule 21 (Affectation)


State 93

   26 VariableDeclaration: tID tCOMMA $@2 VariableDeclaration •

    $default  reduce using rule 26 (VariableDeclaration)


State 94

   23 Declaration: tINT VariableDeclaration tASSIGN Expression tSEMI •

    $default  reduce using rule 23 (Declaration)


State 95

   60 Condition: tNOT tLPAR Condition • tRPAR ConditionSuite

    tRPAR  shift, and go to state 118


State 96

   65 ConditionSuite: tAND • Condition

    tNOT  shift, and go to state 54
    tNB   shift, and go to state 55
    tID   shift, and go to state 56

    Condition  go to state 119
    IDNB       go to state 58


State 97

   66 ConditionSuite: tOR • Condition

    tNOT  shift, and go to state 54
    tNB   shift, and go to state 55
    tID   shift, and go to state 56

    Condition  go to state 120
    IDNB       go to state 58


State 98

   59 Condition: tNOT tID ConditionSuite •

    $default  reduce using rule 59 (Condition)


State 99

   29 If: tIF tLPAR Condition tRPAR tLBRACE • $@3 Bloc $@4 tRBRACE Else

    $default  reduce using rule 27 ($@3)

    $@3  go to state 121


State 100

   53 Condition: IDNB tLT IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 122


State 101

   54 Condition: IDNB tGT IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 123


State 102

   52 Condition: IDNB tNE IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 124


State 103

   51 Condition: IDNB tEQ IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 125


State 104

   55 Condition: IDNB tLE IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 126


State 105

   56 Condition: IDNB tGE IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 127


State 106

   57 Condition: IDNB tAND IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 128


State 107

   58 Condition: IDNB tOR IDNB • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 129


State 108

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE • $@7 Bloc $@8 tRBRACE

    $default  reduce using rule 34 ($@7)

    $@7  go to state 130


State 109

   37 Print: tPRINT tLPAR tID tRPAR tSEMI •

    $default  reduce using rule 37 (Print)


State 110

   20 Bloc: tID tLPAR Argument tRPAR tSEMI • Bloc

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 131
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 111

   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression
   50 ArgumentNext: tCOMMA Expression • ArgumentNext

    tADD    shift, and go to state 88
    tSUB    shift, and go to state 89
    tMUL    shift, and go to state 90
    tDIV    shift, and go to state 91
    tCOMMA  shift, and go to state 84

    $default  reduce using rule 49 (ArgumentNext)

    ArgumentNext  go to state 132


State 112

   46 Expression: tLPAR Expression tRPAR •

    $default  reduce using rule 46 (Expression)


State 113

   41 Expression: tID tLPAR Argument • tRPAR

    tRPAR  shift, and go to state 133


State 114

   42 Expression: Expression • tADD Expression
   42           | Expression tADD Expression •
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression

    tMUL  shift, and go to state 90
    tDIV  shift, and go to state 91

    $default  reduce using rule 42 (Expression)


State 115

   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   43           | Expression tSUB Expression •
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression

    tMUL  shift, and go to state 90
    tDIV  shift, and go to state 91

    $default  reduce using rule 43 (Expression)


State 116

   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   44           | Expression tMUL Expression •
   45           | Expression • tDIV Expression

    $default  reduce using rule 44 (Expression)


State 117

   42 Expression: Expression • tADD Expression
   43           | Expression • tSUB Expression
   44           | Expression • tMUL Expression
   45           | Expression • tDIV Expression
   45           | Expression tDIV Expression •

    $default  reduce using rule 45 (Expression)


State 118

   60 Condition: tNOT tLPAR Condition tRPAR • ConditionSuite

    tAND  shift, and go to state 96
    tOR   shift, and go to state 97

    $default  reduce using rule 64 (ConditionSuite)

    ConditionSuite  go to state 134


State 119

   65 ConditionSuite: tAND Condition •

    $default  reduce using rule 65 (ConditionSuite)


State 120

   66 ConditionSuite: tOR Condition •

    $default  reduce using rule 66 (ConditionSuite)


State 121

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 • Bloc $@4 tRBRACE Else

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 135
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 122

   53 Condition: IDNB tLT IDNB ConditionSuite •

    $default  reduce using rule 53 (Condition)


State 123

   54 Condition: IDNB tGT IDNB ConditionSuite •

    $default  reduce using rule 54 (Condition)


State 124

   52 Condition: IDNB tNE IDNB ConditionSuite •

    $default  reduce using rule 52 (Condition)


State 125

   51 Condition: IDNB tEQ IDNB ConditionSuite •

    $default  reduce using rule 51 (Condition)


State 126

   55 Condition: IDNB tLE IDNB ConditionSuite •

    $default  reduce using rule 55 (Condition)


State 127

   56 Condition: IDNB tGE IDNB ConditionSuite •

    $default  reduce using rule 56 (Condition)


State 128

   57 Condition: IDNB tAND IDNB ConditionSuite •

    $default  reduce using rule 57 (Condition)


State 129

   58 Condition: IDNB tOR IDNB ConditionSuite •

    $default  reduce using rule 58 (Condition)


State 130

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE $@7 • Bloc $@8 tRBRACE

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 136
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 131

   20 Bloc: tID tLPAR Argument tRPAR tSEMI Bloc •

    $default  reduce using rule 20 (Bloc)


State 132

   50 ArgumentNext: tCOMMA Expression ArgumentNext •

    $default  reduce using rule 50 (ArgumentNext)


State 133

   41 Expression: tID tLPAR Argument tRPAR •

    $default  reduce using rule 41 (Expression)


State 134

   60 Condition: tNOT tLPAR Condition tRPAR ConditionSuite •

    $default  reduce using rule 60 (Condition)


State 135

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 Bloc • $@4 tRBRACE Else

    $default  reduce using rule 28 ($@4)

    $@4  go to state 137


State 136

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE $@7 Bloc • $@8 tRBRACE

    $default  reduce using rule 35 ($@8)

    $@8  go to state 138


State 137

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 Bloc $@4 • tRBRACE Else

    tRBRACE  shift, and go to state 139


State 138

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE $@7 Bloc $@8 • tRBRACE

    tRBRACE  shift, and go to state 140


State 139

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 Bloc $@4 tRBRACE • Else

    tELSE  shift, and go to state 141

    $default  reduce using rule 30 (Else)

    Else  go to state 142


State 140

   36 While: tWHILE tLPAR Condition tRPAR tLBRACE $@7 Bloc $@8 tRBRACE •

    $default  reduce using rule 36 (While)


State 141

   33 Else: tELSE • tLBRACE $@5 Bloc $@6 tRBRACE

    tLBRACE  shift, and go to state 143


State 142

   29 If: tIF tLPAR Condition tRPAR tLBRACE $@3 Bloc $@4 tRBRACE Else •

    $default  reduce using rule 29 (If)


State 143

   33 Else: tELSE tLBRACE • $@5 Bloc $@6 tRBRACE

    $default  reduce using rule 31 ($@5)

    $@5  go to state 144


State 144

   33 Else: tELSE tLBRACE $@5 • Bloc $@6 tRBRACE

    tINT     shift, and go to state 23
    tIF      shift, and go to state 24
    tWHILE   shift, and go to state 25
    tPRINT   shift, and go to state 26
    tRETURN  shift, and go to state 27
    tID      shift, and go to state 28

    $default  reduce using rule 13 (Bloc)

    Bloc         go to state 145
    Affectation  go to state 30
    Declaration  go to state 31
    If           go to state 32
    While        go to state 33
    Print        go to state 34
    Return       go to state 35


State 145

   33 Else: tELSE tLBRACE $@5 Bloc • $@6 tRBRACE

    $default  reduce using rule 32 ($@6)

    $@6  go to state 146


State 146

   33 Else: tELSE tLBRACE $@5 Bloc $@6 • tRBRACE

    tRBRACE  shift, and go to state 147


State 147

   33 Else: tELSE tLBRACE $@5 Bloc $@6 tRBRACE •

    $default  reduce using rule 33 (Else)
